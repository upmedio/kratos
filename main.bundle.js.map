{"version":3,"sources":["D:/armanii/frontend/ng/src/$_lazy_route_resource lazy","D:/armanii/frontend/ng/src/app/app.browser.module.ts","D:/armanii/frontend/ng/src/app/app.component.css","D:/armanii/frontend/ng/src/app/app.component.html","D:/armanii/frontend/ng/src/app/app.component.ts","D:/armanii/frontend/ng/src/app/app.module.ts","D:/armanii/frontend/ng/src/app/app.routing.module.ts","D:/armanii/frontend/ng/src/app/lib/i18n/language/language-select.component.html","D:/armanii/frontend/ng/src/app/lib/i18n/language/language-select.component.ts","D:/armanii/frontend/ng/src/app/lib/i18n/language/language.module.ts","D:/armanii/frontend/ng/src/app/lib/i18n/language/language.service.ts","D:/armanii/frontend/ng/src/app/lib/ng2-scroll-to/index.ts","D:/armanii/frontend/ng/src/app/lib/ngx-logger/index.ts","D:/armanii/frontend/ng/src/app/lib/ngx-logger/logger.service.mock.ts","D:/armanii/frontend/ng/src/app/lib/ngx-logger/logger.service.ts","D:/armanii/frontend/ng/src/app/lib/services/const.service.ts","D:/armanii/frontend/ng/src/environments/environment.ts","D:/armanii/frontend/ng/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"./bigtoken/verificationScreen/verificationScreen.module\": [\n\t\t\"../../../../../src/app/bigtoken/verificationScreen/verificationScreen.module.ts\",\n\t\t\"verificationScreen.module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/armanii/frontend/ng/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { AppModule } from './app.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\n/*\r\nFrom : https://malcoded.com/posts/angular-fundamentals-universal-server-side-rendering\r\n\r\nThe browser app module is very simple. All we need to do here, is to call BrowserModule.withServerTransition.\r\nThis method tells angular, that we are using server side rendering and that the view has to be swapped,\r\nonce the full framework is loaded. This method expects an object with a key called appId.\r\nYou can enter any string here. Just make sure, the string in our browser app module matches the one in the server app module.\r\n */\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [\r\n        BrowserModule.withServerTransition({\r\n            appId: 'app-root'\r\n        }),\r\n        AppModule,\r\n        BrowserAnimationsModule\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent],\r\n})\r\nexport class AppBrowserModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/armanii/frontend/ng/src/app/app.browser.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".toolbar-filler {\\r\\n    -webkit-box-flex: 1;\\r\\n        -ms-flex: 1 1 auto;\\r\\n            flex: 1 1 auto\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/armanii/frontend/ng/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"page\\\">\\r\\n    <div class=\\\"page-content\\\" >\\r\\n        <router-outlet></router-outlet>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/armanii/frontend/ng/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import {Component, PLATFORM_ID, Inject} from '@angular/core';\r\n\r\nimport { LanguageService } from './lib/i18n/language/language.service';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n// component\r\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/ga';\r\n\r\nimport {\r\n    NGXLogger\r\n} from './lib/ngx-logger';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent  {\r\n    locationPath: any;\r\n\r\n    constructor(\r\n        location: Location,\r\n        private log: NGXLogger,\r\n        private router: Router,\r\n        public languageService: LanguageService,\r\n        @Inject(PLATFORM_ID) private platformId: Object,\r\n        angulartics2GoogleAnalytics: Angulartics2GoogleAnalytics\r\n    ) {\r\n\r\n        this.log.debug('Language:', languageService.getLocale());\r\n        router.events.subscribe((val) => {\r\n            if (this.locationPath !== location.path()) {\r\n                this.locationPath = location.path();\r\n\r\n                // On a route change event, scroll to the top (for client platforms only)\r\n                if (isPlatformBrowser(this.platformId)) {\r\n                    this.log.debug('Scroll to the top...');\r\n                    const scrollableElement = document.querySelector('.page-content');\r\n                    if (scrollableElement) {\r\n                        scrollableElement.scrollTop = 0;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/armanii/frontend/ng/src/app/app.component.ts","import { NgModule } from '@angular/core';\r\nimport { MetaModule } from '@ngx-meta/core';\r\n\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport {\r\n    MatSidenavModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule\r\n} from '@angular/material';\r\n\r\nimport {AppComponent} from './app.component';\r\n\r\nimport { LoggerModule, NgxLoggerLevel } from './lib/ngx-logger';\r\nimport { ScrollTo } from './lib/ng2-scroll-to';\r\n\r\nimport {LanguageModule} from './lib/i18n/language/language.module';\r\n\r\nimport { Angulartics2Module } from 'angulartics2';\r\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/ga';\r\n\r\n\r\n// ---- login part -----\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {AppRoutingModule} from './app.routing.module';\r\n\r\n// available everywhere in the app\r\nimport { ConstResolver } from './lib/services/const.service';\r\nimport { LanguageService } from './lib/i18n/language/language.service';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n\r\n        // ngScrollTo\r\n        ScrollTo\r\n\r\n    ],\r\n    imports: [\r\n        BrowserModule.withServerTransition({\r\n            appId: 'app-root'\r\n        }),\r\n        HttpClientModule,\r\n\r\n        // angular forms\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n\r\n        // material\r\n        MatSidenavModule,\r\n        MatButtonModule,\r\n        MatToolbarModule,\r\n        MatIconModule,\r\n        MatListModule,\r\n        MatCardModule,\r\n        MatMenuModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatSelectModule,\r\n\r\n        AppRoutingModule,\r\n\r\n        // common component\r\n        LanguageModule,\r\n\r\n        // meta\r\n        MetaModule.forRoot(),\r\n\r\n        // loger\r\n        LoggerModule.forRoot({level: NgxLoggerLevel.TRACE, serverLogLevel: NgxLoggerLevel.ERROR}),\r\n\r\n        // added to imports\r\n        Angulartics2Module.forRoot([Angulartics2GoogleAnalytics])\r\n    ],\r\n    providers: [\r\n         ConstResolver, LanguageService\r\n\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/armanii/frontend/ng/src/app/app.module.ts","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MetaGuard } from '@ngx-meta/core';\r\nimport { ConstResolver } from './lib/services/const.service';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        canActivateChild: [MetaGuard],\r\n        resolve: {\r\n            constResolved: ConstResolver\r\n        },\r\n        children: [\r\n            {\r\n                path: 'verification',\r\n                loadChildren: './bigtoken/verificationScreen/verificationScreen.module#VerificationScreenModule'\r\n\r\n            },\r\n            {\r\n                path: '**',\r\n                redirectTo: 'verification'\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(\r\n      appRoutes,\r\n     // { enableTracing: true } // <-- debugging purposes only\r\n    )\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/armanii/frontend/ng/src/app/app.routing.module.ts","module.exports = \"<style>\\r\\n.paddingl3em {\\r\\n    width: 1.2em;\\r\\n}\\r\\na:hover {\\r\\n\\r\\n    text-decoration: none;\\r\\n}\\r\\n</style>\\r\\n\\r\\n<ng-container *ngIf=\\\"type=='mat-menu-item'\\\">\\r\\n    <button mat-menu-item [matMenuTriggerFor]=\\\"Languages\\\">\\r\\n        <mat-icon>language</mat-icon>\\r\\n        <span i18n>Languages</span>\\r\\n    </button>\\r\\n    \\r\\n</ng-container>\\r\\n<ng-container *ngIf=\\\"type=='mat-icon-button'\\\">\\r\\n    <button mat-icon-button [matMenuTriggerFor]=\\\"Languages\\\">\\r\\n        <mat-icon>language</mat-icon>\\r\\n    </button>\\r\\n</ng-container>\\r\\n<mat-menu #Languages=\\\"matMenu\\\">\\r\\n    <!-- if production -->\\r\\n    <ng-container >\\r\\n        <a \\r\\n                mat-menu-item \\r\\n                *ngFor=\\\"let lang of languageService.getList()\\\" \\r\\n                [attr.href]=\\\"lang.url\\\" \\r\\n                [disabled]=\\\"lang.locale==languageService.getLocale()\\\">\\r\\n            <img class=\\\"paddingl3em\\\" [src]=\\\"lang.imgUrl\\\">\\r\\n            {{lang.label}}\\r\\n        </a>\\r\\n    </ng-container>\\r\\n\\r\\n   \\r\\n</mat-menu>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/armanii/frontend/ng/src/app/lib/i18n/language/language-select.component.html\n// module id = ../../../../../src/app/lib/i18n/language/language-select.component.html\n// module chunks = main","import { Component, Inject, OnInit, Input } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MetaService } from '@ngx-meta/core';\r\n\r\nimport {\r\n  NGXLogger\r\n} from '../../../lib/ngx-logger';\r\n\r\nimport {LanguageService} from './language.service';\r\n\r\n@Component({\r\n  selector: 'app-language-select',\r\n  templateUrl: './language-select.component.html',\r\n//  styleUrls: ['./premium.component.css']\r\n})\r\nexport class SelectLanguageComponent implements OnInit {\r\n  @Input() type: string;\r\n\r\n\r\n  constructor(private log: NGXLogger,\r\n                public languageService: LanguageService\r\n                 ) {\r\n       this.log.debug('instantiated:');\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/armanii/frontend/ng/src/app/lib/i18n/language/language-select.component.ts","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSelectModule\r\n} from '@angular/material';\r\n\r\n\r\nimport {RouterModule, Routes} from '@angular/router';\r\n\r\nimport {SelectLanguageComponent} from './language-select.component';\r\nimport {LanguageService} from './language.service';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatMenuModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatSelectModule\r\n    ],\r\n    declarations: [\r\n        SelectLanguageComponent\r\n    ],\r\n    providers: [\r\n    ],\r\n    exports: [\r\n        SelectLanguageComponent\r\n    ]\r\n})\r\nexport class LanguageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/armanii/frontend/ng/src/app/lib/i18n/language/language.module.ts","import {\r\n    Component,\r\n    LOCALE_ID,\r\n    PLATFORM_ID,\r\n    Inject\r\n} from '@angular/core';\r\n\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\nimport {\r\n    Injectable\r\n} from '@angular/core';\r\n\r\nimport {\r\n    Http,\r\n    Response,\r\n    Headers,\r\n    RequestOptions\r\n} from '@angular/http';\r\n\r\nimport {\r\n    Observable\r\n} from 'rxjs/Rx';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\nimport {\r\n    Router\r\n} from '@angular/router';\r\n\r\nimport {\r\n    NGXLogger\r\n} from './../../ngx-logger';\r\n\r\nimport {\r\n    HttpClient\r\n} from '@angular/common/http';\r\n\r\nimport {\r\n    Location\r\n} from '@angular/common';\r\nimport {\r\n    environment\r\n} from '../../../../environments/environment';\r\nimport {\r\n    BehaviorSubject\r\n} from 'rxjs/BehaviorSubject';\r\n\r\n@Injectable()\r\nexport class LanguageService {\r\n\r\n    private currentConst: any;\r\n    production = false;\r\n\r\n    private languageData = {\r\n        current: 'en-US',\r\n        list: [],\r\n        enabled: {},\r\n        static: [{\r\n                imgUrl: 'https://upload.wikimedia.org/wikipedia/en/thumb/a/ae/Flag_of_the_United_Kingdom.svg/15px-Flag_of_the_United_Kingdom.svg.png',\r\n                label: 'English',\r\n                locale: 'en-US',\r\n                url: '',\r\n                enabled: true\r\n            },\r\n            {\r\n                imgUrl: 'https://upload.wikimedia.org/wikipedia/en/thumb/c/c3/Flag_of_France.svg/15px-Flag_of_France.svg.png',\r\n                label: 'Français',\r\n                locale: 'fr-FR',\r\n                url: '',\r\n                enabled: true\r\n            },\r\n            {\r\n                imgUrl: 'https://upload.wikimedia.org/wikipedia/en/thumb/b/ba/Flag_of_Germany.svg/15px-Flag_of_Germany.svg.png',\r\n                label: 'Deutsche',\r\n                locale: 'de-DE',\r\n                url: '',\r\n                enabled: false\r\n            },\r\n            {\r\n                imgUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/9f/Flag_of_Indonesia.svg/15px-Flag_of_Indonesia.svg.png',\r\n                label: 'Bahasa Indonesia',\r\n                locale: 'id-ID',\r\n                url: '',\r\n                enabled: false\r\n            },\r\n            {\r\n                imgUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/fa/Flag_of_the_People%27s_Republic_of_China.svg/15px-Flag_of_the_People%27s_Republic_of_China.svg.png',\r\n                label: 'Chinese',\r\n                locale: 'zh-CN',\r\n                url: '',\r\n                enabled: false\r\n            },\r\n            {\r\n                imgUrl: 'https://upload.wikimedia.org/wikipedia/en/thumb/9/9e/Flag_of_Japan.svg/15px-Flag_of_Japan.svg.png',\r\n                label: '日本語',\r\n                locale: 'ja-JP',\r\n                url: '',\r\n                enabled: true\r\n            },\r\n            {\r\n                imgUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/09/Flag_of_South_Korea.svg/15px-Flag_of_South_Korea.svg.png',\r\n                label: 'Korean',\r\n                locale: 'ko-KO',\r\n                url: '',\r\n                enabled: false\r\n            },\r\n            {\r\n                imgUrl: 'https://upload.wikimedia.org/wikipedia/en/thumb/f/f3/Flag_of_Russia.svg/15px-Flag_of_Russia.svg.png',\r\n                label: 'русский',\r\n                locale: 'ru-RU',\r\n                url: '',\r\n                enabled: false\r\n            },\r\n            {\r\n                imgUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/Flag_of_Vietnam.svg/15px-Flag_of_Vietnam.svg.png',\r\n                label: 'Vietnamese',\r\n                locale: 'vi-VN',\r\n                url: '',\r\n                enabled: false\r\n            },\r\n            {\r\n                imgUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Flag_of_Thailand.svg/15px-Flag_of_Thailand.svg.png',\r\n                label: 'Thai',\r\n                locale: 'th-TH',\r\n                url: '',\r\n                enabled: true\r\n            },\r\n            {\r\n                imgUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/5/5c/Flag_of_Portugal.svg/15px-Flag_of_Portugal.svg.png',\r\n                label: 'Português',\r\n                locale: 'pt-PO',\r\n                url: '',\r\n                enabled: false\r\n            }\r\n        ]\r\n\r\n\r\n    };\r\n\r\n    private messageSource;\r\n\r\n    public currentLocaleObs;\r\n    locationPath: any;\r\n\r\n    private changeMessage(message: string) {\r\n        this.messageSource.next(message);\r\n    }\r\n\r\n    getLocale() {\r\n        // this.log.debug('getLocale:', this.languageData.current);\r\n        return this.languageData.current;\r\n    }\r\n    getList() {\r\n        //\r\n\r\n        return this.languageData.list;\r\n    }\r\n    /**\r\n     *  Change the current locale under dev env\r\n     * @param lang \r\n     * \r\n     */\r\n\r\n    changeLang(lang: any) {\r\n        this.log.debug('dev:changeLang:', lang);\r\n        this.languageData.current = lang.locale;\r\n\r\n        // publish the new value - for later usage in a ngrx store\r\n        this.changeMessage(this.languageData.current);\r\n\r\n    }\r\n    /**\r\n     * JavaScript Get URL Parameter\r\n     * \r\n     * @param String prop The specific URL parameter you want to retreive the value for\r\n     * @return String|Object If prop is provided a string value is returned, otherwise an object of all properties is returned\r\n     */\r\n    getUrlParams() {\r\n        const search = decodeURIComponent(window.location.href.slice(window.location.href.indexOf('?') + 1));\r\n        const definitions = search.split('&');\r\n        const params = {};\r\n        definitions.forEach(function(val, key) {\r\n            const parts = val.split('=', 2);\r\n            params[parts[0]] = parts[1];\r\n        });\r\n        return params;\r\n    }\r\n\r\n    constructor(\r\n        private location: Location,\r\n        private log: NGXLogger,\r\n        private router: Router,\r\n        @Inject(LOCALE_ID) protected localeId: string,\r\n        @Inject(PLATFORM_ID) private platformId: Object\r\n\r\n    ) {\r\n        this.production = environment.developpement;\r\n        // get the language from the param of the url, ugly but just for testing/dev\r\n        // only from the browser part, client side\r\n        if (environment.developpement &&  isPlatformBrowser(this.platformId)) {\r\n\r\n            this.log.debug('This is dev env...');\r\n\r\n            const params = this.getUrlParams();\r\n            this.languageData.current = params['lang'];\r\n            if (!this.languageData.current) {\r\n                this.languageData.current = localeId; // default one\r\n            }\r\n        } else {\r\n            // get the locale from the build\r\n            this.languageData.current = localeId; // default one\r\n        }\r\n\r\n        this.log.debug('not production extract from parameters:', this.languageData.current);\r\n\r\n\r\n        this.messageSource = new BehaviorSubject < string > (this.languageData.current);\r\n        this.currentLocaleObs = this.messageSource.asObservable();\r\n\r\n\r\n\r\n        this.languageData.static.forEach(lang => {\r\n            if (lang.enabled) {\r\n                this.languageData.list.push(lang);\r\n                this.languageData.enabled[lang.locale] = true;\r\n            }\r\n        });\r\n\r\n        router.events.subscribe((val) => {\r\n\r\n            if (this.locationPath !== location.path()) {\r\n                this.locationPath = location.path();\r\n\r\n                const _locationPrefix = this.locationPath.replace(this.languageData.current, '');\r\n\r\n                this.log.debug('location without locale:', _locationPrefix);\r\n\r\n                this.languageData.list.forEach(lang => {\r\n                    if (!environment.developpement) {\r\n                        // prepare url to swith to other language\r\n                        if (lang.locale === 'en-US') {\r\n                            lang.url = _locationPrefix;\r\n                        } else {\r\n                            lang.url = '/' + lang.locale + _locationPrefix;\r\n                        }\r\n                    } else {\r\n                        if (lang.locale === 'en-US') {\r\n                            lang.url = _locationPrefix;\r\n                        } else {\r\n                            lang.url = _locationPrefix + '?lang=' + lang.locale;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n                this.log.debug('languageData:', this.languageData);\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/armanii/frontend/ng/src/app/lib/i18n/language/language.service.ts","import { Directive, ElementRef, Input, HostListener } from '@angular/core';\r\n@Directive({\r\n  selector: '[scrollTo]'\r\n})\r\nexport class ScrollTo {\r\n  @Input() scrollableElementSelector: string;\r\n  @Input() scrollTargetSelector: string;\r\n  @Input() scrollYTarget: number;\r\n  @Input() scrollOffSet: number;\r\n\r\n  constructor(private el: ElementRef) { }\r\n  @HostListener('click', ['$event']) onClick(event: MouseEvent) {\r\n    event.preventDefault();\r\n    let scrollEnd: number;\r\n    if (this.scrollYTarget) {\r\n      if (isNaN(Number(this.scrollYTarget))) {\r\n        throw 'scrollYTarget must have numerical values';\r\n      }\r\n      scrollEnd = this.scrollYTarget;\r\n    }\r\n    let target: HTMLElement;\r\n    if (scrollEnd == null) {\r\n      target = this.getTarget();\r\n      if (!target) {\r\n        console.warn('target element do not exist');\r\n        return;\r\n      }\r\n      scrollEnd = target.offsetTop;\r\n    }\r\n    let scrollingElement: HTMLElement = this.getScrollableElement(target);\r\n    try {\r\n      if (scrollingElement === document.body) {\r\n        this.smoothScroll(document.documentElement, scrollEnd);\r\n      }\r\n    } catch (e) { console.warn(e) }\r\n\r\n    this.smoothScroll(scrollingElement, scrollEnd);\r\n  }\r\n\r\n  private getScrollableElement(target: HTMLElement): HTMLElement {\r\n    let scrollableElement: HTMLElement;\r\n    if (this.scrollableElementSelector) {\r\n      scrollableElement = <HTMLElement>document.querySelector(this.scrollableElementSelector);\r\n    } else if (target != null) {\r\n      scrollableElement = this.findScrollableParent(target);\r\n    } else {\r\n      scrollableElement = this.findMainScrollableElement();\r\n    }\r\n    return scrollableElement;\r\n  }\r\n\r\n  private getTarget(): HTMLElement {\r\n    let target: HTMLElement;\r\n    if (this.scrollTargetSelector) {\r\n      target = <HTMLElement>document.querySelector(this.scrollTargetSelector);\r\n    } else if (this.el.nativeElement.href) {\r\n      let href: string = '#' + this.el.nativeElement.href.split('#')[1];\r\n      target = <HTMLElement>document.querySelector(href);\r\n    }\r\n    return target;\r\n  }\r\n\r\n  private smoothScroll(element: HTMLElement, end: number): void {\r\n    const duration = 500;\r\n    const clock: number = Date.now();\r\n    const requestAnimationFrame = window.requestAnimationFrame || function (fn) {\r\n      window.setTimeout(fn, 15);\r\n    };\r\n\tlet offset:number = 0;\r\n\tif (this.scrollOffSet) {\r\n\t\tif (isNaN(Number(this.scrollOffSet))) {\r\n\t\t\tthrow 'scrollOffSet must have numerical values';\r\n\t\t}\r\n\t\tend -= this.scrollOffSet;\r\n\t}\r\n    const start: number = element.scrollTop;\r\n    let step = () => {\r\n      let elapsed = Date.now() - clock;\r\n      let position = this.position(start, end, elapsed, duration);\r\n      element.scrollTop = position;\r\n      if (elapsed > duration) {\r\n      } else {\r\n        requestAnimationFrame(step);\r\n      }\r\n    };\r\n    step();\r\n  }\r\n\r\n  // ease in out function thanks to:\r\n  // http://blog.greweb.fr/2012/02/bezier-curve-based-easing-functions-from-concept-to-implementation/\r\n  easeInOutCubic(t: number): number {\r\n    return t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\r\n  }\r\n  /**\r\n    * calculate the scroll position we should be in\r\n    * given the start and end point of the scroll\r\n    * the time elapsed from the beginning of the scroll\r\n    * and the total duration of the scroll (default 500ms)\r\n    */\r\n  private position(start: number, end: number, elapsed: number, duration: number): number {\r\n    if (elapsed > duration) {\r\n      return end;\r\n    };\r\n    return start + (end - start) * this.easeInOutCubic(elapsed / duration); // <-- you can change the easing funtion there\r\n    // return start + (end - start) * (elapsed / duration); // <-- this would give a linear scroll\r\n  }\r\n\r\n\r\n  /**\r\n    * finds scrollable parent of an element\r\n    * @method findScrollableParent\r\n    * @param {HTMLElement} element\r\n    * @returns {HTMLElement} element\r\n    */\r\n  private findScrollableParent(element: HTMLElement): HTMLElement {\r\n    let isBody: boolean,\r\n      hasScrollableSpace: boolean,\r\n      hasVisibleOverflow: boolean;\r\n    do {\r\n      element = element.parentElement;\r\n      // set condition variables\r\n      isBody = element === document.body;\r\n      hasScrollableSpace = element.clientHeight < element.scrollHeight;\r\n      hasVisibleOverflow = getComputedStyle(element, null).overflow === 'visible';\r\n    } while (!isBody && !(hasScrollableSpace && !hasVisibleOverflow));\r\n    return element;\r\n  }\r\n\r\n\r\n  /**\r\n    * finds scrollable parent of an element\r\n    * @method findMainScrollableElement\r\n    * @returns {HTMLElement} element\r\n    */\r\n  private findMainScrollableElement(): HTMLElement {\r\n    let element: HTMLElement = this.findScrollableChild(document.body);\r\n    if (element != null) {\r\n      return element;\r\n    }\r\n    return document.body;\r\n  }\r\n\r\n  private isScrollable(element: HTMLElement): boolean {\r\n    let hasScrollableSpace = element.clientHeight < element.scrollHeight;\r\n    let hasVisibleOverflow = getComputedStyle(element, null).overflow === 'visible';\r\n    return hasScrollableSpace && !hasVisibleOverflow;\r\n  }\r\n\r\n  private isScriptTag(element: HTMLElement): boolean {\r\n    return element.nodeName === 'SCRIPT';\r\n  }\r\n\r\n  private findScrollableChild(inputElement: HTMLElement): HTMLElement {\r\n    let scrollableElement: HTMLElement;\r\n    let i = 0;\r\n    if (this.isScriptTag(inputElement)) {\r\n      return null;\r\n    }\r\n    while (scrollableElement == null && i < inputElement.childElementCount) {\r\n      let element = <HTMLElement>inputElement.children[i];\r\n      if (this.isScrollable(element)) {\r\n        scrollableElement = element;\r\n        return element;\r\n      }\r\n      scrollableElement = this.findScrollableChild(element);\r\n      i++;\r\n    }\r\n    return scrollableElement;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/armanii/frontend/ng/src/app/lib/ng2-scroll-to/index.ts","import {CommonModule} from '@angular/common';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {ModuleWithProviders, NgModule} from '@angular/core';\r\n\r\nimport {LoggerConfig, NGXLogger} from './logger.service';\r\nimport {NGXLoggerMock} from './logger.service.mock';\r\n\r\nexport * from './logger.service.mock';\r\nexport * from './logger.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule\r\n  ]\r\n})\r\nexport class LoggerModule {\r\n  static forRoot(config: LoggerConfig | null | undefined): ModuleWithProviders {\r\n    return {\r\n      ngModule: LoggerModule,\r\n      providers: [\r\n        {provide: LoggerConfig, useValue: config || {}},\r\n        NGXLogger,\r\n        NGXLoggerMock\r\n      ]\r\n    };\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/armanii/frontend/ng/src/app/lib/ngx-logger/index.ts","import {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class NGXLoggerMock {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  trace(message: string) {\r\n  }\r\n\r\n  debug(message: string) {\r\n  }\r\n\r\n  info(message: string) {\r\n  }\r\n\r\n  log(message: string) {\r\n  }\r\n\r\n  warn(message: string) {\r\n  }\r\n\r\n  error(message: string) {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/armanii/frontend/ng/src/app/lib/ngx-logger/logger.service.mock.ts","import {\r\n    Inject,\r\n    Injectable,\r\n    Optional,\r\n    PLATFORM_ID\r\n} from '@angular/core';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\nimport {\r\n    HttpClient,\r\n    HttpHeaders\r\n} from '@angular/common/http';\r\nimport {\r\n    isPlatformBrowser\r\n} from '@angular/common';\r\n\r\nexport class LoggerConfig {\r\n    level: NgxLoggerLevel;\r\n    serverLogLevel: NgxLoggerLevel;\r\n    serverLoggingUrl ? : string;\r\n    enableDarkTheme ? : boolean;\r\n}\r\n\r\nexport enum NgxLoggerLevel {\r\n    TRACE = 0, DEBUG, INFO, LOG, WARN, ERROR, OFF\r\n}\r\n\r\nconst Levels = [\r\n    'TRACE',\r\n    'DEBUG',\r\n    'INFO',\r\n    'LOG',\r\n    'WARN',\r\n    'ERROR',\r\n    'OFF'\r\n];\r\n\r\n@Injectable()\r\nexport class NGXLogger {\r\n\r\n    private _serverLogLevel: NgxLoggerLevel;\r\n    private _clientLogLevel: NgxLoggerLevel;\r\n    private _isIE: boolean;\r\n\r\n    private instanceMapping: any;\r\n\r\n    constructor(private http: HttpClient,\r\n        @Inject(PLATFORM_ID) private platformId,\r\n        @Optional() private options: LoggerConfig) {\r\n\r\n        if (!this.options) {\r\n            this.options = {\r\n                level: NgxLoggerLevel.OFF,\r\n                serverLogLevel: NgxLoggerLevel.OFF\r\n            };\r\n        }\r\n        this._serverLogLevel = this.options.serverLogLevel;\r\n        this._clientLogLevel = this.options.level;\r\n        this._isIE = isPlatformBrowser(platformId) &&\r\n            !!(navigator.userAgent.indexOf('MSIE') !== -1 || navigator.userAgent.match(/Trident\\//) || navigator.userAgent.match(/Edge\\//));\r\n    }\r\n\r\n    trace(message, ...additional: any[]) {\r\n        this._log(NgxLoggerLevel.TRACE, true, message, additional);\r\n    }\r\n\r\n    debug(message, ...additional: any[]) {\r\n        this._log(NgxLoggerLevel.DEBUG, true, message, additional);\r\n    }\r\n\r\n    info(message, ...additional: any[]) {\r\n        this._log(NgxLoggerLevel.INFO, true, message, additional);\r\n    }\r\n\r\n    log(message, ...additional: any[]) {\r\n        this._log(NgxLoggerLevel.LOG, true, message, additional);\r\n    }\r\n\r\n    warn(message, ...additional: any[]) {\r\n        this._log(NgxLoggerLevel.WARN, true, message, additional);\r\n    }\r\n\r\n    error(message, ...additional: any[]) {\r\n        this._log(NgxLoggerLevel.ERROR, true, message, additional);\r\n    }\r\n\r\n    private _timestamp() {\r\n        return new Date().toISOString();\r\n    }\r\n\r\n    private _logOnServer(level: NgxLoggerLevel, message, additional: any[]) {\r\n        if (!this.options.serverLoggingUrl) {\r\n            return;\r\n        }\r\n\r\n        // if the user provides a serverLogLevel and the current level is than that do not log\r\n        if (level < this._serverLogLevel) {\r\n            return;\r\n        }\r\n\r\n        const headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n\r\n        this.http.post(this.options.serverLoggingUrl, {\r\n                level: Levels[level],\r\n                message: message,\r\n                additional: additional,\r\n                timestamp: this._timestamp()\r\n            }, {\r\n                headers\r\n            })\r\n            .subscribe(\r\n                res => null,\r\n                error => this._log(NgxLoggerLevel.ERROR, false, 'FAILED TO LOG ON SERVER')\r\n            );\r\n    }\r\n\r\n    private _logIE(level: NgxLoggerLevel, message: string, additional: any[]) {\r\n        switch (level) {\r\n            case NgxLoggerLevel.WARN:\r\n                console.warn(`${this._timestamp()} [${Levels[level]}] `, message, ...additional);\r\n                break;\r\n            case NgxLoggerLevel.ERROR:\r\n                console.error(`${this._timestamp()} [${Levels[level]}] `, message, ...additional);\r\n                break;\r\n            case NgxLoggerLevel.INFO:\r\n                console.info(`${this._timestamp()} [${Levels[level]}] `, message, ...additional);\r\n                break;\r\n            default:\r\n                console.log(`${this._timestamp()} [${Levels[level]}] `, message, ...additional);\r\n        }\r\n    }\r\n\r\n    private _log(level: NgxLoggerLevel, logOnServer: boolean, message, additional: any[] = []) {\r\n        if (!message) {\r\n            return;\r\n        }\r\n\r\n        // Allow logging on server even if client log level is off\r\n        if (logOnServer) {\r\n            this._logOnServer(level, message, additional);\r\n        }\r\n\r\n        // if no message or the log level is less than the environ\r\n        if (level < this._clientLogLevel) {\r\n            return;\r\n        }\r\n\r\n        if (typeof message === 'object') {\r\n            try {\r\n                message = JSON.stringify(message, null, 2);\r\n            } catch (e) {\r\n                additional = [message, ...additional];\r\n                message = 'circular object in message. ';\r\n            }\r\n        }\r\n\r\n        // Coloring doesn't work in IE\r\n        if (this._isIE) {\r\n            return this._logIE(level, message, additional);\r\n        }\r\n\r\n        let color1;\r\n        let defaultColor = this.options.enableDarkTheme ? 'white' : 'black';\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            switch (level) {\r\n                case NgxLoggerLevel.TRACE:\r\n                    color1 = 'blue';\r\n                    break;\r\n                case NgxLoggerLevel.DEBUG:\r\n                    color1 = 'green';\r\n                    break;\r\n                case NgxLoggerLevel.INFO:\r\n                case NgxLoggerLevel.LOG:\r\n                    color1 = 'gray';\r\n                    break;\r\n                case NgxLoggerLevel.WARN:\r\n                    color1 = 'orange';\r\n                    break;\r\n                case NgxLoggerLevel.ERROR:\r\n                    color1 = 'red';\r\n                    break;\r\n                case NgxLoggerLevel.OFF:\r\n                default:\r\n                    return;\r\n            }\r\n        } else {\r\n            defaultColor = '\\x1b[0m';\r\n            switch (level) {\r\n                case NgxLoggerLevel.TRACE:\r\n                    color1 = '\\x1b[36m';\r\n                    break;\r\n                case NgxLoggerLevel.DEBUG:\r\n                    color1 = '\\x1b[32m';\r\n                    break;\r\n                case NgxLoggerLevel.INFO:\r\n                case NgxLoggerLevel.LOG:\r\n                    color1 = '\\x1b[34m';\r\n                    break;\r\n                case NgxLoggerLevel.WARN:\r\n                    color1 = '\\x1b[33m';\r\n                    break;\r\n                case NgxLoggerLevel.ERROR:\r\n                    color1 = '\\x1b[31m';\r\n                    break;\r\n                case NgxLoggerLevel.OFF:\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n\r\n\r\n        // only on the client side\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            console.log(`%c${this._timestamp()} [${Levels[level]}] %c${message}`, `color:${color1}`, `color:${defaultColor}`, ...additional);\r\n        } else {\r\n            console.log(`%s${this._timestamp()} [${Levels[level]}] %s${message}`, `${color1}`, `${defaultColor}`, ...additional);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/armanii/frontend/ng/src/app/lib/ngx-logger/logger.service.ts","import { Component, Input } from '@angular/core';\r\nimport { Injectable } from '@angular/core';\r\nimport {Observable} from 'rxjs/Rx';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport {\r\n    RouterModule,\r\n    Routes,\r\n    Resolve,\r\n    ActivatedRoute,\r\n    ActivatedRouteSnapshot,\r\n    RouterStateSnapshot\r\n} from '@angular/router';\r\n\r\nimport {\r\n    environment\r\n} from '../../../environments/environment';\r\n\r\nimport {\r\n    NGXLogger\r\n} from './../ngx-logger';\r\n\r\nimport {\r\n    HttpClient\r\n} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class ConstResolver implements Resolve<any> {\r\n\r\n    private currentConst: any;\r\n    private apiServer: any;\r\n\r\n    constructor(private log: NGXLogger, private http: HttpClient) {\r\n        this.apiServer = {\r\n            protocol: environment.appServer.protocol,\r\n            host: environment.appServer.host,\r\n            port: environment.appServer.port,\r\n            getUrl: function() {\r\n                return this.protocol + '://' + this.host + ':' + this.port;\r\n            }\r\n        };\r\n        this.log.info('apiServer:', this.apiServer.getUrl());\r\n    }\r\n\r\n    get() {\r\n        return this.currentConst;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\r\n        this.log.debug('ConstResolver 1 ...');\r\n\r\n        const obs: Observable<any> = new Observable(observer => {\r\n            this.log.debug('ConstResolver 2 ...');\r\n\r\n            //\r\n            const req = this.getJSON()\r\n            .subscribe(response => {\r\n                this.log.debug('ConstResolver 3:', response.data);\r\n                //\r\n                observer.next(response.data);\r\n                observer.complete();\r\n            });\r\n\r\n        });\r\n\r\n        return obs;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * Add the filters ? maybe not needed only 491 lines after all\r\n     *\r\n     */\r\n    getJSON(): Observable < any > {\r\n        this.log.debug('Run getList:', this.currentConst);\r\n        let req;\r\n        if (this.currentConst != null) {\r\n            this.log.debug('Return cached result ...');\r\n            req = Observable.of(\r\n                {\r\n                    data: this.currentConst\r\n                }\r\n            );\r\n        } else {\r\n            const apiUrl = this.apiServer.getUrl() + '/api/app/ico/const';\r\n            this.log.debug('apiUrl:', apiUrl);\r\n            req = this.http\r\n                .get < any > (apiUrl)\r\n                .catch(this.handleHttpError.bind(this))\r\n                // we share because if not each subscribe done one the service will run the post again\r\n                // https://blog.thoughtram.io/angular/2016/06/16/cold-vs-hot-observables.html\r\n                .share();\r\n\r\n            req.subscribe(response => {\r\n                if (response.success) {\r\n                    this.currentConst = response.data;\r\n                    this.log.debug('Record the const on the cache:', this.currentConst);\r\n                } else {\r\n                    this.log.warn(' error:', response);\r\n                }\r\n            });\r\n        }\r\n\r\n        return req;\r\n    }\r\n    /**\r\n     *\r\n     * handle the http error and app error\r\n     *\r\n     * @param err\r\n     * @returns {Observable<{success: boolean; message: any}>}\r\n     */\r\n\r\n    public handleHttpError(err) {\r\n        this.log.warn('handleHttpError:', err);\r\n\r\n        this.log.warn('handleHttpError:', err.error);\r\n\r\n        let errorMsg;\r\n\r\n        // application error no need to unwrap\r\n        if (err.error && err.error.AuthError) {\r\n            errorMsg = err.error.message;\r\n        } else {\r\n            // try to unwrap the error\r\n            try {\r\n                const data = JSON.parse(err.error);\r\n                errorMsg = data.message;\r\n                this.log.warn('Application error:', data);\r\n            } catch (e) {\r\n                // other error, generic one\r\n                this.log.error('Not an application error:', e);\r\n                errorMsg = 'Server is not responding please try again later';\r\n            }\r\n        }\r\n\r\n        return Observable.of({\r\n            success: false,\r\n            message: errorMsg\r\n        });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/armanii/frontend/ng/src/app/lib/services/const.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: true,\r\n  developpement: false,\r\n  apiServer: {\r\n    protocol: 'https',\r\n    host: 'apikycuat.icoconsulting.asia',\r\n    port: 443\r\n  },\r\n\r\n  appServer: {\r\n    protocol: 'https',\r\n    host: 'apikycuat.icoconsulting.asia',\r\n    port: 443\r\n  }\r\n\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// D:/armanii/frontend/ng/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppBrowserModule } from './app/app.browser.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppBrowserModule);\r\n\n\n\n// WEBPACK FOOTER //\n// D:/armanii/frontend/ng/src/main.ts"],"sourceRoot":"webpack:///"}